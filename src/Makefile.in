# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = banna$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in bp_ini_lexer.c bp_ini_parser.c \
	bp_ini_parser.h bp_script_lexer.c bp_script_parser.c \
	bp_script_parser.h
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libbp_ray_la_LIBADD =
am__objects_1 = libbp_ray_la-bp_scene.lo libbp_ray_la-bp_ray.lo \
	libbp_ray_la-bp_camera.lo
am__objects_2 = libbp_ray_la-bp_script_parser.lo \
	libbp_ray_la-bp_script_lexer.lo libbp_ray_la-bp_ini_lexer.lo \
	libbp_ray_la-bp_ini_parser.lo
am__objects_3 = libbp_ray_la-bp_pigment.lo libbp_ray_la-bp_texture.lo \
	libbp_ray_la-bp_material.lo libbp_ray_la-bp_image.lo \
	libbp_ray_la-bp_normal.lo libbp_ray_la-bp_perlin_noise.lo \
	libbp_ray_la-shade.lo
am__objects_4 = libbp_ray_la-bp_light.lo libbp_ray_la-bp_object.lo \
	libbp_ray_la-bp_triangle.lo libbp_ray_la-bp_sphere.lo \
	libbp_ray_la-bp_box.lo libbp_ray_la-mesh.lo $(am__objects_3)
am__objects_5 = libbp_ray_la-bp_io.lo libbp_ray_la-bp_memory.lo \
	libbp_ray_la-bp_utils.lo libbp_ray_la-bp_math.lo \
	libbp_ray_la-bp_debug.lo libbp_ray_la-bp_kd_tree.lo
am_libbp_ray_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_4) $(am__objects_5)
libbp_ray_la_OBJECTS = $(am_libbp_ray_la_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_banna_OBJECTS = banna-banna.$(OBJEXT) banna-ui.$(OBJEXT) \
	banna-ui_win32.$(OBJEXT) banna-ui_linux.$(OBJEXT)
banna_OBJECTS = $(am_banna_OBJECTS)
banna_DEPENDENCIES = libbp_ray.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) --mode=compile $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) --mode=compile $(YACC) $(YFLAGS) \
	$(AM_YFLAGS)
SOURCES = $(libbp_ray_la_SOURCES) $(banna_SOURCES)
DIST_SOURCES = $(libbp_ray_la_SOURCES) $(banna_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
YFLAGS = @YFLAGS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
EXTRA_DIST = ply2mesh.py
# bp_test
lib_LTLIBRARIES = libbp_ray.la

#force lex and yacc to generate files
BUILT_SOURCES = bp_script_parser.h bp_script_lexer.c bp_script_parser.c \
	bp_ini_lexer.c bp_ini_parser.c

CLEANFILES = $(BUILT_SOURCES) bp_script_parser.c $(srcdir)/*~

#change optimiztion flag
common_CFLAGS = -g -Wall -Wimplicit -pedantic -Wno-long-long \
	-O3 -pipe -funroll-loops -foptimize-register-move -fgcse -fforce-addr\
	-fomit-frame-pointer

# -fprefetch-loop-arrays 
core_FILES = bp_scene.c bp_scene.h bp_ray.c bp_ray.h bp_config.h \
	config.h bp_camera.c bp_camera.h bp_types.h 

util_FILES = bp_io.h bp_io.c bp_memory.h bp_memory.c bp_utils.h \
	bp_utils.c bp_math.h bp_math_generic.h bp_math.c math_sse.h bp_debug.h \
	bp_debug.c bp_kd_tree.c bp_kd_tree.h 

parse_FILES = bp_script.h bp_script_parser.y bp_script_lexer.l \
	bp_ini_lexer.l bp_ini_parser.y

material_FILES = bp_pigment.h bp_pigment.c bp_texture.h bp_texture.c \
	bp_material.c bp_material.h bp_image.h bp_image.c bp_normal.h bp_normal.c \
	bp_perlin_noise.c bp_noise.h shade.c shade.h

object_FILES = bp_light.c bp_light.h bp_object.h bp_object.c \
	bp_triangle.c bp_sphere.h bp_sphere.c bp_box.h bp_box.c mesh.h mesh.c \
	bp_primitive.h $(material_FILES)


#create bp_script_parser.h
AM_YFLAGS = -d
libbp_ray_la_SOURCES = $(core_FILES) $(parse_FILES) $(object_FILES) $(util_FILES)
libbp_ray_la_LDFLAGS = -no-undefined -version-info 0:1:0
libbp_ray_la_CFLAGS = $(common_CFLAGS)
banna_CFLAGS = $(common_CFLAGS)
banna_SOURCES = banna.c ui.h ui.c ui_win32.c ui_linux.c
banna_LDADD = libbp_ray.la
banna_LDFLAGS = 
bp_test_CFLAGS = $(common_CFLAGS)
bp_test_SOURCES = bp_test.c
bp_test_LDADD = libbp_ray.la
bp_test_LDFLAGS = -pg
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .l .lo .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
bp_script_parser.h: bp_script_parser.c
	@if test ! -f $@; then \
	  rm -f bp_script_parser.c; \
	  $(MAKE) bp_script_parser.c; \
	else :; fi
bp_ini_parser.h: bp_ini_parser.c
	@if test ! -f $@; then \
	  rm -f bp_ini_parser.c; \
	  $(MAKE) bp_ini_parser.c; \
	else :; fi
libbp_ray.la: $(libbp_ray_la_OBJECTS) $(libbp_ray_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libbp_ray_la_LDFLAGS) $(libbp_ray_la_OBJECTS) $(libbp_ray_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
banna$(EXEEXT): $(banna_OBJECTS) $(banna_DEPENDENCIES) 
	@rm -f banna$(EXEEXT)
	$(LINK) $(banna_LDFLAGS) $(banna_OBJECTS) $(banna_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/banna-banna.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/banna-ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/banna-ui_linux.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/banna-ui_win32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_box.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_camera.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_image.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_ini_lexer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_ini_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_kd_tree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_light.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_material.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_math.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_memory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_normal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_perlin_noise.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_pigment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_ray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_scene.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_script_lexer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_script_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_sphere.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_texture.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_triangle.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-bp_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-mesh.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libbp_ray_la-shade.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libbp_ray_la-bp_scene.lo: bp_scene.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_scene.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_scene.Tpo" -c -o libbp_ray_la-bp_scene.lo `test -f 'bp_scene.c' || echo '$(srcdir)/'`bp_scene.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_scene.Tpo" "$(DEPDIR)/libbp_ray_la-bp_scene.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_scene.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_scene.c' object='libbp_ray_la-bp_scene.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_scene.lo `test -f 'bp_scene.c' || echo '$(srcdir)/'`bp_scene.c

libbp_ray_la-bp_ray.lo: bp_ray.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_ray.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_ray.Tpo" -c -o libbp_ray_la-bp_ray.lo `test -f 'bp_ray.c' || echo '$(srcdir)/'`bp_ray.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_ray.Tpo" "$(DEPDIR)/libbp_ray_la-bp_ray.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_ray.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_ray.c' object='libbp_ray_la-bp_ray.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_ray.lo `test -f 'bp_ray.c' || echo '$(srcdir)/'`bp_ray.c

libbp_ray_la-bp_camera.lo: bp_camera.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_camera.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_camera.Tpo" -c -o libbp_ray_la-bp_camera.lo `test -f 'bp_camera.c' || echo '$(srcdir)/'`bp_camera.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_camera.Tpo" "$(DEPDIR)/libbp_ray_la-bp_camera.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_camera.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_camera.c' object='libbp_ray_la-bp_camera.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_camera.lo `test -f 'bp_camera.c' || echo '$(srcdir)/'`bp_camera.c

libbp_ray_la-bp_script_parser.lo: bp_script_parser.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_script_parser.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_script_parser.Tpo" -c -o libbp_ray_la-bp_script_parser.lo `test -f 'bp_script_parser.c' || echo '$(srcdir)/'`bp_script_parser.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_script_parser.Tpo" "$(DEPDIR)/libbp_ray_la-bp_script_parser.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_script_parser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_script_parser.c' object='libbp_ray_la-bp_script_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_script_parser.lo `test -f 'bp_script_parser.c' || echo '$(srcdir)/'`bp_script_parser.c

libbp_ray_la-bp_script_lexer.lo: bp_script_lexer.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_script_lexer.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_script_lexer.Tpo" -c -o libbp_ray_la-bp_script_lexer.lo `test -f 'bp_script_lexer.c' || echo '$(srcdir)/'`bp_script_lexer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_script_lexer.Tpo" "$(DEPDIR)/libbp_ray_la-bp_script_lexer.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_script_lexer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_script_lexer.c' object='libbp_ray_la-bp_script_lexer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_script_lexer.lo `test -f 'bp_script_lexer.c' || echo '$(srcdir)/'`bp_script_lexer.c

libbp_ray_la-bp_ini_lexer.lo: bp_ini_lexer.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_ini_lexer.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_ini_lexer.Tpo" -c -o libbp_ray_la-bp_ini_lexer.lo `test -f 'bp_ini_lexer.c' || echo '$(srcdir)/'`bp_ini_lexer.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_ini_lexer.Tpo" "$(DEPDIR)/libbp_ray_la-bp_ini_lexer.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_ini_lexer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_ini_lexer.c' object='libbp_ray_la-bp_ini_lexer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_ini_lexer.lo `test -f 'bp_ini_lexer.c' || echo '$(srcdir)/'`bp_ini_lexer.c

libbp_ray_la-bp_ini_parser.lo: bp_ini_parser.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_ini_parser.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_ini_parser.Tpo" -c -o libbp_ray_la-bp_ini_parser.lo `test -f 'bp_ini_parser.c' || echo '$(srcdir)/'`bp_ini_parser.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_ini_parser.Tpo" "$(DEPDIR)/libbp_ray_la-bp_ini_parser.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_ini_parser.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_ini_parser.c' object='libbp_ray_la-bp_ini_parser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_ini_parser.lo `test -f 'bp_ini_parser.c' || echo '$(srcdir)/'`bp_ini_parser.c

libbp_ray_la-bp_light.lo: bp_light.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_light.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_light.Tpo" -c -o libbp_ray_la-bp_light.lo `test -f 'bp_light.c' || echo '$(srcdir)/'`bp_light.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_light.Tpo" "$(DEPDIR)/libbp_ray_la-bp_light.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_light.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_light.c' object='libbp_ray_la-bp_light.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_light.lo `test -f 'bp_light.c' || echo '$(srcdir)/'`bp_light.c

libbp_ray_la-bp_object.lo: bp_object.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_object.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_object.Tpo" -c -o libbp_ray_la-bp_object.lo `test -f 'bp_object.c' || echo '$(srcdir)/'`bp_object.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_object.Tpo" "$(DEPDIR)/libbp_ray_la-bp_object.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_object.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_object.c' object='libbp_ray_la-bp_object.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_object.lo `test -f 'bp_object.c' || echo '$(srcdir)/'`bp_object.c

libbp_ray_la-bp_triangle.lo: bp_triangle.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_triangle.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_triangle.Tpo" -c -o libbp_ray_la-bp_triangle.lo `test -f 'bp_triangle.c' || echo '$(srcdir)/'`bp_triangle.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_triangle.Tpo" "$(DEPDIR)/libbp_ray_la-bp_triangle.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_triangle.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_triangle.c' object='libbp_ray_la-bp_triangle.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_triangle.lo `test -f 'bp_triangle.c' || echo '$(srcdir)/'`bp_triangle.c

libbp_ray_la-bp_sphere.lo: bp_sphere.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_sphere.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_sphere.Tpo" -c -o libbp_ray_la-bp_sphere.lo `test -f 'bp_sphere.c' || echo '$(srcdir)/'`bp_sphere.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_sphere.Tpo" "$(DEPDIR)/libbp_ray_la-bp_sphere.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_sphere.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_sphere.c' object='libbp_ray_la-bp_sphere.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_sphere.lo `test -f 'bp_sphere.c' || echo '$(srcdir)/'`bp_sphere.c

libbp_ray_la-bp_box.lo: bp_box.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_box.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_box.Tpo" -c -o libbp_ray_la-bp_box.lo `test -f 'bp_box.c' || echo '$(srcdir)/'`bp_box.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_box.Tpo" "$(DEPDIR)/libbp_ray_la-bp_box.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_box.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_box.c' object='libbp_ray_la-bp_box.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_box.lo `test -f 'bp_box.c' || echo '$(srcdir)/'`bp_box.c

libbp_ray_la-mesh.lo: mesh.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-mesh.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-mesh.Tpo" -c -o libbp_ray_la-mesh.lo `test -f 'mesh.c' || echo '$(srcdir)/'`mesh.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-mesh.Tpo" "$(DEPDIR)/libbp_ray_la-mesh.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-mesh.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mesh.c' object='libbp_ray_la-mesh.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-mesh.lo `test -f 'mesh.c' || echo '$(srcdir)/'`mesh.c

libbp_ray_la-bp_pigment.lo: bp_pigment.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_pigment.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_pigment.Tpo" -c -o libbp_ray_la-bp_pigment.lo `test -f 'bp_pigment.c' || echo '$(srcdir)/'`bp_pigment.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_pigment.Tpo" "$(DEPDIR)/libbp_ray_la-bp_pigment.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_pigment.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_pigment.c' object='libbp_ray_la-bp_pigment.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_pigment.lo `test -f 'bp_pigment.c' || echo '$(srcdir)/'`bp_pigment.c

libbp_ray_la-bp_texture.lo: bp_texture.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_texture.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_texture.Tpo" -c -o libbp_ray_la-bp_texture.lo `test -f 'bp_texture.c' || echo '$(srcdir)/'`bp_texture.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_texture.Tpo" "$(DEPDIR)/libbp_ray_la-bp_texture.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_texture.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_texture.c' object='libbp_ray_la-bp_texture.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_texture.lo `test -f 'bp_texture.c' || echo '$(srcdir)/'`bp_texture.c

libbp_ray_la-bp_material.lo: bp_material.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_material.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_material.Tpo" -c -o libbp_ray_la-bp_material.lo `test -f 'bp_material.c' || echo '$(srcdir)/'`bp_material.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_material.Tpo" "$(DEPDIR)/libbp_ray_la-bp_material.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_material.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_material.c' object='libbp_ray_la-bp_material.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_material.lo `test -f 'bp_material.c' || echo '$(srcdir)/'`bp_material.c

libbp_ray_la-bp_image.lo: bp_image.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_image.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_image.Tpo" -c -o libbp_ray_la-bp_image.lo `test -f 'bp_image.c' || echo '$(srcdir)/'`bp_image.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_image.Tpo" "$(DEPDIR)/libbp_ray_la-bp_image.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_image.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_image.c' object='libbp_ray_la-bp_image.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_image.lo `test -f 'bp_image.c' || echo '$(srcdir)/'`bp_image.c

libbp_ray_la-bp_normal.lo: bp_normal.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_normal.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_normal.Tpo" -c -o libbp_ray_la-bp_normal.lo `test -f 'bp_normal.c' || echo '$(srcdir)/'`bp_normal.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_normal.Tpo" "$(DEPDIR)/libbp_ray_la-bp_normal.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_normal.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_normal.c' object='libbp_ray_la-bp_normal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_normal.lo `test -f 'bp_normal.c' || echo '$(srcdir)/'`bp_normal.c

libbp_ray_la-bp_perlin_noise.lo: bp_perlin_noise.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_perlin_noise.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_perlin_noise.Tpo" -c -o libbp_ray_la-bp_perlin_noise.lo `test -f 'bp_perlin_noise.c' || echo '$(srcdir)/'`bp_perlin_noise.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_perlin_noise.Tpo" "$(DEPDIR)/libbp_ray_la-bp_perlin_noise.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_perlin_noise.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_perlin_noise.c' object='libbp_ray_la-bp_perlin_noise.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_perlin_noise.lo `test -f 'bp_perlin_noise.c' || echo '$(srcdir)/'`bp_perlin_noise.c

libbp_ray_la-shade.lo: shade.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-shade.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-shade.Tpo" -c -o libbp_ray_la-shade.lo `test -f 'shade.c' || echo '$(srcdir)/'`shade.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-shade.Tpo" "$(DEPDIR)/libbp_ray_la-shade.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-shade.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='shade.c' object='libbp_ray_la-shade.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-shade.lo `test -f 'shade.c' || echo '$(srcdir)/'`shade.c

libbp_ray_la-bp_io.lo: bp_io.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_io.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_io.Tpo" -c -o libbp_ray_la-bp_io.lo `test -f 'bp_io.c' || echo '$(srcdir)/'`bp_io.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_io.Tpo" "$(DEPDIR)/libbp_ray_la-bp_io.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_io.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_io.c' object='libbp_ray_la-bp_io.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_io.lo `test -f 'bp_io.c' || echo '$(srcdir)/'`bp_io.c

libbp_ray_la-bp_memory.lo: bp_memory.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_memory.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_memory.Tpo" -c -o libbp_ray_la-bp_memory.lo `test -f 'bp_memory.c' || echo '$(srcdir)/'`bp_memory.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_memory.Tpo" "$(DEPDIR)/libbp_ray_la-bp_memory.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_memory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_memory.c' object='libbp_ray_la-bp_memory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_memory.lo `test -f 'bp_memory.c' || echo '$(srcdir)/'`bp_memory.c

libbp_ray_la-bp_utils.lo: bp_utils.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_utils.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_utils.Tpo" -c -o libbp_ray_la-bp_utils.lo `test -f 'bp_utils.c' || echo '$(srcdir)/'`bp_utils.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_utils.Tpo" "$(DEPDIR)/libbp_ray_la-bp_utils.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_utils.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_utils.c' object='libbp_ray_la-bp_utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_utils.lo `test -f 'bp_utils.c' || echo '$(srcdir)/'`bp_utils.c

libbp_ray_la-bp_math.lo: bp_math.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_math.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_math.Tpo" -c -o libbp_ray_la-bp_math.lo `test -f 'bp_math.c' || echo '$(srcdir)/'`bp_math.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_math.Tpo" "$(DEPDIR)/libbp_ray_la-bp_math.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_math.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_math.c' object='libbp_ray_la-bp_math.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_math.lo `test -f 'bp_math.c' || echo '$(srcdir)/'`bp_math.c

libbp_ray_la-bp_debug.lo: bp_debug.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_debug.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_debug.Tpo" -c -o libbp_ray_la-bp_debug.lo `test -f 'bp_debug.c' || echo '$(srcdir)/'`bp_debug.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_debug.Tpo" "$(DEPDIR)/libbp_ray_la-bp_debug.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_debug.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_debug.c' object='libbp_ray_la-bp_debug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_debug.lo `test -f 'bp_debug.c' || echo '$(srcdir)/'`bp_debug.c

libbp_ray_la-bp_kd_tree.lo: bp_kd_tree.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -MT libbp_ray_la-bp_kd_tree.lo -MD -MP -MF "$(DEPDIR)/libbp_ray_la-bp_kd_tree.Tpo" -c -o libbp_ray_la-bp_kd_tree.lo `test -f 'bp_kd_tree.c' || echo '$(srcdir)/'`bp_kd_tree.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/libbp_ray_la-bp_kd_tree.Tpo" "$(DEPDIR)/libbp_ray_la-bp_kd_tree.Plo"; else rm -f "$(DEPDIR)/libbp_ray_la-bp_kd_tree.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='bp_kd_tree.c' object='libbp_ray_la-bp_kd_tree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbp_ray_la_CFLAGS) $(CFLAGS) -c -o libbp_ray_la-bp_kd_tree.lo `test -f 'bp_kd_tree.c' || echo '$(srcdir)/'`bp_kd_tree.c

banna-banna.o: banna.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-banna.o -MD -MP -MF "$(DEPDIR)/banna-banna.Tpo" -c -o banna-banna.o `test -f 'banna.c' || echo '$(srcdir)/'`banna.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-banna.Tpo" "$(DEPDIR)/banna-banna.Po"; else rm -f "$(DEPDIR)/banna-banna.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='banna.c' object='banna-banna.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-banna.o `test -f 'banna.c' || echo '$(srcdir)/'`banna.c

banna-banna.obj: banna.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-banna.obj -MD -MP -MF "$(DEPDIR)/banna-banna.Tpo" -c -o banna-banna.obj `if test -f 'banna.c'; then $(CYGPATH_W) 'banna.c'; else $(CYGPATH_W) '$(srcdir)/banna.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-banna.Tpo" "$(DEPDIR)/banna-banna.Po"; else rm -f "$(DEPDIR)/banna-banna.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='banna.c' object='banna-banna.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-banna.obj `if test -f 'banna.c'; then $(CYGPATH_W) 'banna.c'; else $(CYGPATH_W) '$(srcdir)/banna.c'; fi`

banna-ui.o: ui.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-ui.o -MD -MP -MF "$(DEPDIR)/banna-ui.Tpo" -c -o banna-ui.o `test -f 'ui.c' || echo '$(srcdir)/'`ui.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-ui.Tpo" "$(DEPDIR)/banna-ui.Po"; else rm -f "$(DEPDIR)/banna-ui.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ui.c' object='banna-ui.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-ui.o `test -f 'ui.c' || echo '$(srcdir)/'`ui.c

banna-ui.obj: ui.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-ui.obj -MD -MP -MF "$(DEPDIR)/banna-ui.Tpo" -c -o banna-ui.obj `if test -f 'ui.c'; then $(CYGPATH_W) 'ui.c'; else $(CYGPATH_W) '$(srcdir)/ui.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-ui.Tpo" "$(DEPDIR)/banna-ui.Po"; else rm -f "$(DEPDIR)/banna-ui.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ui.c' object='banna-ui.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-ui.obj `if test -f 'ui.c'; then $(CYGPATH_W) 'ui.c'; else $(CYGPATH_W) '$(srcdir)/ui.c'; fi`

banna-ui_win32.o: ui_win32.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-ui_win32.o -MD -MP -MF "$(DEPDIR)/banna-ui_win32.Tpo" -c -o banna-ui_win32.o `test -f 'ui_win32.c' || echo '$(srcdir)/'`ui_win32.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-ui_win32.Tpo" "$(DEPDIR)/banna-ui_win32.Po"; else rm -f "$(DEPDIR)/banna-ui_win32.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ui_win32.c' object='banna-ui_win32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-ui_win32.o `test -f 'ui_win32.c' || echo '$(srcdir)/'`ui_win32.c

banna-ui_win32.obj: ui_win32.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-ui_win32.obj -MD -MP -MF "$(DEPDIR)/banna-ui_win32.Tpo" -c -o banna-ui_win32.obj `if test -f 'ui_win32.c'; then $(CYGPATH_W) 'ui_win32.c'; else $(CYGPATH_W) '$(srcdir)/ui_win32.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-ui_win32.Tpo" "$(DEPDIR)/banna-ui_win32.Po"; else rm -f "$(DEPDIR)/banna-ui_win32.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ui_win32.c' object='banna-ui_win32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-ui_win32.obj `if test -f 'ui_win32.c'; then $(CYGPATH_W) 'ui_win32.c'; else $(CYGPATH_W) '$(srcdir)/ui_win32.c'; fi`

banna-ui_linux.o: ui_linux.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-ui_linux.o -MD -MP -MF "$(DEPDIR)/banna-ui_linux.Tpo" -c -o banna-ui_linux.o `test -f 'ui_linux.c' || echo '$(srcdir)/'`ui_linux.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-ui_linux.Tpo" "$(DEPDIR)/banna-ui_linux.Po"; else rm -f "$(DEPDIR)/banna-ui_linux.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ui_linux.c' object='banna-ui_linux.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-ui_linux.o `test -f 'ui_linux.c' || echo '$(srcdir)/'`ui_linux.c

banna-ui_linux.obj: ui_linux.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -MT banna-ui_linux.obj -MD -MP -MF "$(DEPDIR)/banna-ui_linux.Tpo" -c -o banna-ui_linux.obj `if test -f 'ui_linux.c'; then $(CYGPATH_W) 'ui_linux.c'; else $(CYGPATH_W) '$(srcdir)/ui_linux.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/banna-ui_linux.Tpo" "$(DEPDIR)/banna-ui_linux.Po"; else rm -f "$(DEPDIR)/banna-ui_linux.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='ui_linux.c' object='banna-ui_linux.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(banna_CFLAGS) $(CFLAGS) -c -o banna-ui_linux.obj `if test -f 'ui_linux.c'; then $(CYGPATH_W) 'ui_linux.c'; else $(CYGPATH_W) '$(srcdir)/ui_linux.c'; fi`

.l.c:
	$(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f bp_ini_lexer.c
	-rm -f bp_ini_parser.c
	-rm -f bp_ini_parser.h
	-rm -f bp_script_lexer.c
	-rm -f bp_script_parser.c
	-rm -f bp_script_parser.h
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
